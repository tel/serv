name:                serv-wai
version:             0.2.1.0
synopsis:            Dependently typed API servers with Serv
description:
  Implement "Network.Wai" style servers matching "Serv.Api" style API
  descriptions.
  .
  This package offers tools for building lightweight API servers to match APIs
  described using the types from "Serv.Api". You implement endpoints matching
  the API types in whatever monad you desire (providing a "run" function to
  @IO@) and the server is automatically generated from there.
  .
  See the README for more details.

homepage:            http://github.com/tel/serv#readme
license:             BSD3
license-file:        LICENSE
author:              Joseph Abrahamson <me@jspha.com>
maintainer:          me@jspha.com
copyright:           2015 Joseph Abrahamson
category:            Web
build-type:          Simple
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:

    Serv.Wai
    Serv.Wai.Analysis
    Serv.Wai.Prelude
    Serv.Wai.Type
    Serv.Wai.Error
    Serv.Wai.Rec
    Serv.Wai.Corec
    Serv.Wai.Response

  build-depends:       base >= 4.7 && < 5

                     , aeson
                     , bytestring
                     , case-insensitive
                     , containers
                     , http-kinder
                     , http-media
                     , http-types
                     , mmorph
                     , mtl
                     , serv
                     , singletons
                     , tagged
                     , text
                     , time
                     , transformers
                     , vinyl
                     , wai
  ghc-options:         -Wall -Werror -Wcompat -Wredundant-constraints -Wunused-imports
  default-language:    Haskell2010

executable example1
  main-is:             Ex1.hs
  hs-source-dirs:      exe
  build-depends:       base
                     , serv
                     , serv-wai

                     , aeson
                     , text
                     , wai
                     , warp

  ghc-options:        -Wall -Werror -Wcompat -Wredundant-constraints -Wunused-imports -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

test-suite serv-wai-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  other-modules:

    Examples.Ex1

  build-depends:       base
                     , serv
                     , serv-wai

                     , HUnit
                     , QuickCheck
                     , aeson
                     , tasty
                     , tasty-ant-xml
                     , tasty-hunit
                     , tasty-quickcheck
                     , text
                     , wai
                     , wai-extra

  ghc-options:       -Wall -Werror -Wcompat -Wredundant-constraints -Wunused-imports -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

source-repository head
  type:     git
  location: https://github.com/tel/serv
